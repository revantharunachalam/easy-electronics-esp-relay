# This is the name of the workflow, visible on GitHub UI.
name: esp8266 build workflow
 
# Here we tell GitHub to run the workflow when a commit
# is pushed or a Pull Request is opened.
on: [push, pull_request]
 
# This is the list of jobs that will be run concurrently.
# Since we use a build matrix, the actual number of jobs
# started depends on how many configurations the matrix
# will produce.
jobs:
  # This is the name of the job - can be whatever.
  test-matrix:
 
    # Here we tell GitHub that the jobs must be determined
    # dynamically depending on a matrix configuration.
    strategy:
      matrix:
        # The matrix will produce one job for each configuration
        # parameter of type arduino-platform, in this case a
        # total of 2.
        arduino-platform: ["esp8266:esp8266"]
        # This is usually optional but we need to statically define the
        # FQBN of the boards we want to test for each platform. In the
        # future the CLI might automatically detect and download the core
        # needed to compile against a certain FQBN, at that point the
        # following include section will be useless.
        include:
          # This works like this: when the platform is "arduino:samd", the
          # variable fqbn is set to "arduino:samd:nano_33_iot".
          - arduino-platform: "esp8266:esp8266"
            fqbn: "esp8266:esp8266:nodemcu"
 
    # This is the platform GitHub will use to run our workflow, we
    # pick Windows for no particular reason.
    runs-on: windows-latest
 
    # This is the list of steps this job will run.
    steps:
      # First of all, we clone the repo using the checkout action.
      - name: Checkout
        uses: actions/checkout@master
 
      # We use the arduino/setup-arduino-cli action to install and
      # configure the Arduino CLI on the system.
      - name: Setup Arduino CLI
        uses: arduino/setup-arduino-cli@v2
        with:
            version: "1.x"

      # Create configuration file
      - name: Initialize configuration file and find esp8266
        run: |
          echo "Current directory: %CD%"
          cd esp8266_flash
          echo "Changing directory to esp8266_flash"
          arduino-cli config init --overwrite --dest-file esp8266_flash-cli.yaml
          arduino-cli core update-index --config-file esp8266_flash-cli.yaml
          arduino-cli core search esp8266 --config-file esp8266_flash-cli.yaml
 
      # We then install the platform, which one will be determined
      # dynamically by the build matrix.
      - name: Install platform
        run: |
          echo "Current directory: %CD%"
          cd esp8266_flash
          echo "Changing directory to esp8266_flash"
          arduino-cli board listall --config-file esp8266_flash-cli.yaml
          arduino-cli core install ${{ matrix.arduino-platform }}
 
      # Finally, we compile the sketch, using the FQBN that was set
      # in the build matrix.
      - name: Compile Sketch
        run: |
          echo "Current directory: %CD%"
          cd esp8266_flash
          echo "Changing directory to esp8266_flash"
          del /q 1_build
          mkdir 1_build
          arduino-cli compile --fqbn esp8266:esp8266:nodemcu . --config-file esp8266_flash-cli.yaml --output-dir 1_build